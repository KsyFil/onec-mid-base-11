
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//{{Сайфулина К.А.: Добавление поля ввода "Согласованная скидка" и команды "Перерасчет"
	//Добавление Команды на форму
	
	Команда = Команды.Добавить("Перерасчет"); 
	Команда.Заголовок = "Пересчитать";
	Команда.Действие = "КомандаПерерасчет";
	
	КнопкаФормы = Элементы.Добавить("КнопкаПерерасчет", Тип("КнопкаФормы"), ЭтаФорма);
	КнопкаФормы.ИмяКоманды = "Перерасчет";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;	
	
	Группа = Элементы.Добавить ("ГруппаДобавочная",Тип("ГруппаФормы"),ЭтаФорма);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		
	ТипРеквизита = Новый ОписаниеТипов("Число");
	
	ДобавляемыйРеквизит = Новый Массив;
	РеквизитФормы = Новый РеквизитФормы("РеквизитСогласованнаяСкидка", ТипРеквизита, "", "СогласованнаяСкидка");
	ДобавляемыйРеквизит.Добавить(РеквизитФормы);
	
	ИзменитьРеквизиты(ДобавляемыйРеквизит);
	
	ПолеВвода = Элементы.Добавить("ЭлементСогласованнаяСкидка", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Net_СогласованнаяСкидка";  
	ПолеВвода.УстановитьДействие("ПриИзменении", "ПриИзмененииСогласованнойСкидки");
	//}}
	
КонецПроцедуры


&НаКлиенте	 
Процедура КомандаПерерасчет(Команда)
	
	РасчетСуммыТовары();
	РасчетСуммыУслуги(); 
	
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммыТовары()
	
	Для Каждого СтрокаТовары Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(СтрокаТовары);
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте 
Процедура РасчетСуммыУслуги()
	
	Для Каждого СтрокаУслуги Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(СтрокаУслуги);
	КонецЦикла;
	 		
КонецПроцедуры


/Добавление ПриИзменении Согласованная Скидка
&НаКлиенте
Асинх Процедура ПриИзмененииСогласованнойСкидки(Элемент)
	Если Объект.Товары.Количество() = 0 ИЛИ Объект.Услуги.Количество() = 0 Тогда  
		Сообщить("Данные не заполненны"); 
		Отказ = Истина; 
		Возврат; 
	Иначе
		Ответ = Ждать ВопросАсинх ("Изменился процент скидки. Пересчитать значения таблицы?",РежимДиалогаВопрос.ДаНет,); 
		Если Ответ = КодВозвратаДиалога.Да Тогда 		 
			РасчетСуммыТовары();
			РасчетСуммыУслуги();
			РассчитатьСуммуДокумента(); 
		КонецЕсли;  
	КонецЕсли;
КонецПроцедуры

//}}

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	//{{ Сайфулина К.А.: Замена Формулы расчета суммы по строке
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	ТекущиеДанные.Сумма = (ТекущиеДанные.Количество * ТекущиеДанные.Цена) - (ТекущиеДанные.Количество * ТекущиеДанные.Цена * Объект.Net_СогласованнаяСкидка * 0.01);
    //}}
	РассчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
